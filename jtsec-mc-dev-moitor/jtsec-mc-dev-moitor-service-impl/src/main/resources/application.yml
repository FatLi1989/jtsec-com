#端口号及访问路径
server:
  port: 9529
  servlet:
    context-path: /jtsec
#数据源配置
db:
  driverClass: com.mysql.cj.jdbc.Driver
  username: root
  password: root
  url: jdbc:mysql://192.168.18.158:3306/jtsec_log?useUnicode=true&characterEncoding=utf-8
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root
    url: jdbc:mysql://192.168.18.158:3306/jtsec_log?useUnicode=true&characterEncoding=utf-8
  # 下面为连接池的补充设置，应用到上面所有数据源中
  # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
  # 配置获取连接等待超时的时间
    maxWait: 60000
  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
  # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
  # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall, logback
  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  # 合并多个DruidDataSource的监控数据
  #spring.datasource.useGlobalDataSourceStat=true
  redis:
    host: 47.95.0.193
    # Redis服务器连接端口
    port: 12345
    password: liyanpeng
    jedis:
      pool:
     # 连接池最大连接数（使用负值表示没有限制）
        max-active: 100
     # 连接池中的最小空闲连接
        min-idle: 0
     # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
     # 连接池中的最大空闲连接
        max-idle: 100
        max-total: 200
    # 连接超时时间（毫秒）
    timeout: 60ms
  dubbo:
    server: true
#注册在注册中心的名称，唯一标识，请勿重复
    application:
      id: provider
      name: live-dubbo-provider
#注册中心地址，zookeeper集群，启动输出可以看见链接了多个
#单zookeeper服务：zookeeper://127.0.0.1:2181
    registry:
      address: zookeeper://47.95.0.193:2181
#暴露服务方式
#暴露服务端口 （默认是20880，修改端口，不同的服务提供者端口不能重复）
    protocol:
      name: dubbo
      port: 20880
      status: server
#mybaties扫描配置
  kafka:
    #kafka服务器地址
    bootstrap-servers: 47.95.0.193:9092
    #key-value序列化
    consumer:
      group-id: jtsec-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 100
mybatis:
    #实体类所做包
    type-aliases-package: com.jtsec.manager.pojo.model
    #mapper.xml所在位置
    mapper-locations: classpath:mapper/*.xml
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
# 日志logback
logging:
  level:
     com.jtsec.mc.log.analysis.mapper: debug